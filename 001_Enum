Enume + clean up the file folder after tests

https://stackoverflow.com/questions/18955462/pass-in-an-enum-as-a-method-parameter 

 public static CeiExtractDataPackage GetCeiExcelReport(FileType fileType, string startDate, string endDate, string serviceComponent, int startYy, int startMm, int strtDd, int startHr, int startMn, int startMs, int endYy, int endMm, int endDd, int endHr, int endMn, int endMs)
	    {
	        var model = GetCeiReportModel();
            FileType = fileType,	    

            model.SearchParam = GetSearch(startDate, endDate, serviceComponent, startYy, startMm, strtDd, startHr, startMn, startMs, endYy, endMm, endDd, endHr, endMn, endMs);
	        return model;
		}
			
call in test case 
//var ceiReport = GetCeiExcelReport(FileType.excel, startDate, endDate, serviceComponent, startYy, startMm,strtDd,startHr,startMn, startMs, endYy, endMm, endDd,endHr, endMn,endMs);


////file type///
   public enum FileType
    {
        Text,
        Excel,
        Csv,
    }
 
 ////
 
 /////////

public string getFiletype(FileType filetype)
{
string result = string.empty;
    switch(filetype)
     {
     case FileType.Text;
     break;
     case FileType.Excel;
     break;
     case FileType.Csv;
     break;
      }
      return result; 
}
    

   
public static FileType GetFileType(string filetype)
	    {
	      //  string filetype = Enum.GetName(typeof(FileType), FileType.Excel);	       
            
        Enum filetype0 = FileType.Text;
        Enum filetype1 = FileType.Excel;
        Enum filetype2 = FileType.Csv;
        
	        return filetype.ToString();
	    }*/	 
  /////////////




/////////generate file:

 public static CeiExtractDataPackage GetCeiExcelReport(string startDate, string endDate, string serviceComponent, int startYy, int startMm, int strtDd, int startHr, int startMn, int startMs, int endYy, int endMm, int endDd, int endHr, int endMn, int endMs)
	    {
	        var model = GetCeiReportModel();
            model.FileType = FileType.Excel;

	       // excelfile = FileType.Excel.ToString();

	        // csvfile = model.FileType = FileType.Csv;
            //model.FileType = GetFileType();

            model.SearchParam = GetSearch(startDate, endDate, serviceComponent, startYy, startMm, strtDd, startHr, startMn, startMs, endYy, endMm, endDd, endHr, endMn, endMs);
	        return model;
         
	 /////////
	         [TestMethod]
        public void GenerateCEIReport_successfully()
        {
            string startDate = "\"12/11/2017\"";
            string endDate = "\"12/11/2017\"";
            string serviceComponent = "ABCD";
           
            int startYy = 2017;
            int startMm = 12;
            int strtDd = 11;
            int startHr = 8;
            int startMn = 0;
            int startMs = 0;
            int endYy = 2017;
            int endMm = 12;
            int endDd = 11;
            int endHr = 16;
            int endMn = 10;
            int endMs = 0;

            //string filepath = downLoadPath + "\\CEI_Extract_[MMDDYYYY_HHMMSSMS].xslx";

            string filepath = downLoadPath + "CEI_Extract_" + DateTime.Now.ToString("MM/dd/yyyy_hhmmssms") + ".xlsx";

            restRequestReport.RequestFormat = DataFormat.Json;

            var ceiReport = GetCeiExcelReport(startDate, endDate, serviceComponent, startYy, startMm,strtDd,startHr,startMn, startMs, endYy, endMm, endDd,endHr, endMn,endMs);
            var json = restRequestReport.JsonSerializer.Serialize(ceiReport);
            restRequestReport.AddParameter("application/json; charset=utf-8", json, ParameterType.RequestBody);

            restClient.Execute(restRequestReport);
            byte[] response = restClient.DownloadData(restRequestReport);
            
            File.WriteAllBytes(filepath, response);//file name
         

            //retriving data from cell
           // const string fileName = @"E:\CEI\CEI_Report\CEI_API_Test.xlsx";

            // Retrieve the value in cell A1.
            string value1 = GetDatafromExcel.GetCellValue(filepath, "Sheet1", "A1");

            //assert

            Assert.AreEqual("Report Start Date: \"12/11/2017\"", value1);                   
         
        }

